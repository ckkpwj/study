---
- name: 修改主机名
  hostname: name={{ inventory_hostname }}

- name: 设置时区
  shell: timedatectl set-timezone Asia/Shanghai
  args:
    executable: /bin/bash

- shell: |
    if cat /etc/redhat-release &> /dev/null;then
      if [ ! -d /etc/yum.repos.d/bak ];then
        mkdir /etc/yum.repos.d/bak && mv /etc/yum.repos.d/*.repo /etc/yum.repos.d/bak/
      fi
    elif [ "$(lsb_release -is)" == 'Ubuntu' ];then
      if [ ! -f /etc/apt/sources.list_bak ];then
        mv /etc/apt/sources.list /etc/apt/sources.list_bak
      fi
    else
      echo "Opration system is not CentOS or Ubuntu!"
      exit 1
    fi
  args:
    executable: /bin/bash

- name: 配置软件源-ubuntu
  copy:
    src: sources.list
    dest: /etc/apt/sources.list
  when: ansible_distribution == 'Ubuntu'

- name: 配置软件源-centos
  copy:
    src: Centos-7.repo
    dest: /etc/yum.repos.d/Centos-7-aliyun.repo
  when: ansible_distribution == 'CentOS'

- name: 执行初始化操作-ubuntu
  shell: |
    # 关闭自动更新
    sed -i s/1/0/g /etc/apt/apt.conf.d/10periodic || true

    # 关闭防火墙
    ufw disable || true

    # 修改limit参数
    if ! grep 'soft nofile 655360' /etc/security/limits.conf &> /dev/null;then
      echo '* soft nofile 655360
    * hard nofile 655360
    root soft nofile 655360
    root hard nofile 655360
    * soft nproc 655360
    * hard nproc 655360
    * soft  memlock  unlimited
    * hard memlock  unlimited' >> /etc/security/limits.conf
      echo 'DefaultLimitNOFILE=1024000
    DefaultLimitNPROC=1024000' >> /etc/systemd/system.conf
    fi

    # 添加软件源
    apt-get -y install apt-transport-https curl
    curl -o /etc/apt/trusted.gpg.d/mariadb_release_signing_key.asc 'https://mariadb.org/mariadb_release_signing_key.asc'
    if ! grep 'https://mirrors.aliyun.com/mariadb/repo/{{ mariadb_version }}/ubuntu' /etc/apt/sources.list ;then
      sh -c "echo '\ndeb [arch=amd64] https://mirrors.aliyun.com/mariadb/repo/{{ mariadb_version }}/ubuntu {{ ansible_distribution_release }} main' >>/etc/apt/sources.list"
    fi
  args:
    executable: /bin/bash
  when: ansible_distribution == 'Ubuntu'

- name: 执行初始化操作-centos
  shell: |
    # 修改内核参数
    if ! grep 'soft nofile 655360' /etc/security/limits.conf &> /dev/null;then
      echo '* soft nofile 655360
    * hard nofile 655360
    root soft nofile 655360
    root hard nofile 655360
    * soft nproc 655360
    * hard nproc 655360
    * soft  memlock  unlimited
    * hard memlock  unlimited' >> /etc/security/limits.conf
      echo 'DefaultLimitNOFILE=1024000
    DefaultLimitNPROC=1024000' >> /etc/systemd/system.conf
    fi

    # 添加软件源

    echo '# https://mariadb.org/download/
    [mariadb]
    name = MariaDB
    baseurl = https://mirrors.aliyun.com/mariadb/yum/{{ mariadb_version }}/centos7-amd64
    gpgkey=https://mirrors.aliyun.com/mariadb/yum/RPM-GPG-KEY-MariaDB
    gpgcheck=1
    ' > /etc/yum.repos.d/MariaDB.repo
  args:
    executable: /bin/bash
  when: ansible_distribution == 'CentOS'

- name: 安装依赖软件-ubuntu
  apt:
    name:
      - "mariadb-server-{{ mariadb_version }}"
      - sshpass
    state: present
    update_cache: yes
  when: ansible_distribution == 'Ubuntu'

- name: 安装依赖软件-centos
  yum:
    name:
      - MariaDB-server
      - MariaDB-client
      - sshpass
    state: present
    update_cache: yes
  when: ansible_distribution == 'CentOS'

- name: 创建数据目录
  file:
    path: "{{ mariadb_primary_datadir }}"
    state: directory
    mode: '0755'
    owner: 'mysql'
    group: 'mysql'
  when: inventory_hostname == 'mariadb-primary'

- name: 创建数据目录
  file:
    path: "{{ mariadb_secondary_datadir }}"
    state: directory
    mode: '0755'
    owner: 'mysql'
    group: 'mysql'
  when: inventory_hostname == 'mariadb-secondary' and mariadb_architecture == 'replication'

- name: 迁移初始数据
  shell: |
    mv /var/lib/mysql/* {{ mariadb_primary_datadir }}
  args:
    executable: /bin/bash
  when: inventory_hostname == 'mariadb-primary'

- name: 迁移初始数据
  shell: |
    mv /var/lib/mysql/* {{ mariadb_secondary_datadir }}
  args:
    executable: /bin/bash
  when: inventory_hostname == 'mariadb-secondary' and mariadb_architecture == 'replication'

- name: 下发主库配置文件
  template:
    src: primary.cnf.j2
    dest: /etc/mysql/mariadb.conf.d/50-server.cnf
  when: inventory_hostname == 'mariadb-primary' and ansible_distribution == 'Ubuntu'

- name: 下发主库配置文件
  template:
    src: primary.cnf.j2
    dest: /etc/my.cnf.d/server.cnf
  when: inventory_hostname == 'mariadb-primary' and ansible_distribution == 'CentOS'

- name: 下发从库配置文件
  template:
    src: secondary.cnf.j2
    dest: /etc/mysql/mariadb.conf.d/50-server.cnf
  when: inventory_hostname == 'mariadb-secondary' and mariadb_architecture == 'replication'  and ansible_distribution == 'Ubuntu'

- name: 下发从库配置文件
  template:
    src: secondary.cnf.j2
    dest: /etc/my.cnf.d/server.cnf
  when: inventory_hostname == 'mariadb-secondary' and mariadb_architecture == 'replication'  and ansible_distribution == 'CentOS'

- name: 设置启动参数
  shell: sed -ri /^LimitNOFILE/cLimitNOFILE=infinity /usr/lib/systemd/system/mariadb.service && systemctl daemon-reload
  args:
    executable: /bin/bash

- name: 启动mariadb
  systemd:
    name: mariadb
    state: restarted
    enabled: yes

- name: timed wait
  pause: seconds=10

- name: 安装后操作(primary)
  shell: |
    mysql -e "grant replication slave on *.* to 'replicater'@'{{ hostvars['mariadb-secondary'].ansible_ssh_host }}' identified by '{{ mariadb_replicater_password }}'"
    mysql -e "GRANT ALL PRIVILEGES ON *.* TO root@localhost IDENTIFIED by '{{ mariadb_primary_password }}' WITH GRANT OPTION"
    mysql -e 'flush privileges'
    mysql -e "update mysql.user set plugin = 'mysql_native_password' where user = 'root'"
    systemctl restart mariadb
    sleep 10
  args:
    executable: /bin/bash
  when: inventory_hostname == 'mariadb-primary'

- name: 安装后操作(secondary)
  shell: |
    mysql -e "GRANT ALL PRIVILEGES ON *.* TO root@localhost IDENTIFIED by '{{ mariadb_secondary_password }}' WITH GRANT OPTION"
    mysql -e 'flush privileges'
    mysql -e "update mysql.user set plugin = 'mysql_native_password' where user = 'root'"
    systemctl restart mariadb
    sleep 10
  args:
    executable: /bin/bash
  when: inventory_hostname == 'mariadb-secondary' and mariadb_architecture == 'replication'
